#include <stdio.h>
#include <stdlib.h>

struct BST
{
	int info;
	struct BST* left;
	struct BST* right;
};
typedef struct BST* NODE;

NODE getnode()
{
	NODE x;

	x = malloc(sizeof(struct BST));

	return x;
}

void insert(NODE root, NODE new_node)
{


	if(new_node->info < root->info)
	{
		if(root->left == NULL)
			root->left = new_node;
		else
			insert(root->left, new_node);
	}


	if(new_node->info > root->info)
	{
		if(root->right == NULL)
			root->right = new_node;
		else
			insert(root->right ,new_node);
	}
}


void display(NODE root, int level)
{
	//printf("INSIDE\n");
	if(root == NULL)
    return;

	display(root->right, level+1);

	for (int j = 0; j < level; j++)
		printf("  ");
	printf(" %d ",root->info);
	printf("\n");

	display(root->left,level+1);
}

int main()
{
	NODE new_node;
   //new_node->left = new_node->right = NULL;
	NODE root = getnode();
	root= NULL;
	int choice;

	while(1)
	{
		printf("1. Insert\n");
		printf("2. Display\n");
		scanf("%d",&choice);

		switch(choice)
		{
			case 1:
			 new_node = getnode();
			printf("Enter the element: \n");
			scanf("%d", &new_node->info);
			if(root == NULL)
				root = new_node;
			 else
				insert(root,new_node);

			break;

			case 2:
				display(root,1);
				break;
		}

	}
}
